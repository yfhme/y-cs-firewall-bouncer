# see https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml

linters-settings:
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/crowdsecurity)
      - prefix(github.com/crowdsecurity/crowdsec)
      - prefix(github.com/crowdsecurity/cs-firewall-bouncer)

  gocyclo:
    min-complexity: 30

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: -1
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: -1

  #govet:
  #  settings:
  #    shadow:
  #      strict: true

  lll:
    line-length: 140

  misspell:
    locale: US

  nlreturn:
    block-size: 4

  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/pkg/errors"
            desc: "errors.Wrap() is deprecated in favor of fmt.Errorf()"

  stylecheck:
    checks:
      - all
      - -ST1003 # should not use underscores in Go names; ...
      - -ST1005 # error strings should not be capitalized
      - -ST1012 # error var ... should have name of the form ErrFoo
      - -ST1016 # methods on the same type should have the same receiver name
      - -ST1022 # comment on exported var ... should be of the form ...

  revive:
    ignore-generated-header: true
    severity: error
    enable-all-rules: true
    rules:
      - name: add-constant
        disabled: true
      - name: cognitive-complexity
        disabled: true
      - name: comment-spacings
        disabled: true
      - name: confusing-results
        disabled: true
      - name: cyclomatic
        disabled: true
      - name: empty-lines
        disabled: true
      - name: flag-parameter
        disabled: true
      - name: function-length
        disabled: true
      - name: if-return
        disabled: true
      - name: import-alias-naming
        disabled: true
      - name: import-shadowing
        disabled: true
      - name: line-length-limit
        disabled: true
      - name: nested-structs
        disabled: true
      - name: var-declaration
        disabled: true
      - name: exported
        disabled: true
      - name: unexported-naming
        disabled: true
      - name: unexported-return
        disabled: true
      - name: unhandled-error
        disabled: true
        arguments:
          - "fmt.Print"
          - "fmt.Printf"
          - "fmt.Println"
      - name: unused-receiver
        disabled: true
      - name: function-result-limit
        arguments:
          - 5
  wsl:
    # Allow blocks to end with comments
    allow-trailing-comment: true

linters:
  enable-all: true
  disable:
    #
    # DEPRECATED by golangi-lint
    #
    #- deadcode # The owner seems to have abandoned the linter.  Replaced by unused.
    #- exhaustivestruct # The owner seems to have abandoned the linter. Replaced by exhaustruct.
    #- golint # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
    #- ifshort # Checks that your code uses short syntax for if-statements whenever possible
    #- interfacer # Linter that suggests narrower interface types
    #- maligned # Tool to detect Go structs that would take less memory if their fields were sorted
    #- nosnakecase # nosnakecase is a linter that detects snake case of variable naming and function name.
    #- scopelint # Scopelint checks for unpinned variables in go programs
    #- structcheck # The owner seems to have abandoned the linter.  Replaced by unused.
    #- varcheck # The owner seems to have abandoned the linter.  Replaced by unused.
    - execinquery
    - exportloopref

    #
    # Redundant
    #

    - gocyclo # revive
    - cyclop # revive
    - lll # revive
    - funlen # revive
    - gocognit # revive

    #
    # Disabled
    #
    - gci # Gci control golang package import order and make it always deterministic.

    #
    # Recommended? (easy)
    #
    - gocritic # Provides diagnostics that check for bugs, performance and style issues.
    - gosec # (gas): Inspects source code for security problems
    - wrapcheck # Checks that errors returned from external packages are wrapped

    #
    # Recommended? (requires some work)
    #

    - mnd # An analyzer to detect magic numbers.
    - ireturn # Accept Interfaces, Return Concrete Types
    - unparam # Reports unused function parameters

    #
    # Formatting only, useful in IDE but should not be forced on CI?
    #

    - gofumpt # Gofumpt checks whether code was gofumpt-ed.
    - nlreturn # nlreturn checks for a new line before return and branch statements to increase code clarity
    - whitespace # Tool for detection of leading and trailing whitespace
    - wsl # Whitespace Linter - Forces you to use empty lines!

    #
    # Well intended, but not ready for this
    #
    - cyclop # checks function and package cyclomatic complexity
    - dupl # Tool for code clone detection
    - gocognit # Computes and checks the cognitive complexity of functions
    - gocyclo # Computes and checks the cyclomatic complexity of functions
    - godox # Tool for detection of FIXME, TODO and other comment keywords
    - err113 # Golang linter to check the errors handling expressions # renamed from goerr113
    - maintidx # maintidx measures the maintainability index of each function.
    - nestif # Reports deeply nested if statements
    - paralleltest # paralleltest detects missing usage of t.Parallel() method in your Go test
    - testpackage # linter that makes you use a separate _test package

    #
    # Too strict / too many false positives (for now?)
    #
    - exhaustruct # Checks if all structure fields are initialized
    - forbidigo # Forbids identifiers
    - gochecknoglobals # check that no global variables exist
    - goconst # Finds repeated strings that could be replaced by a constant
    - tagliatelle # Checks the struct tags.
    - varnamelen # checks that the length of a variable's name matches its scope

issues:
  exclude-generated: strict

  max-issues-per-linter: 0
  max-same-issues: 0
  exclude-rules:
    # `err` is often shadowed, we may continue to do it
    - linters:
        - govet
      text: 'shadow: declaration of "err" shadows declaration'

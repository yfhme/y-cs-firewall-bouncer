name: Test .deb packaging

on:
  merge_group:
  push:
    branches:
      - dev
    paths-ignore:
      - "docs/**"
      - ".github/**"
      - "./renovate.json"
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - "docs/**"
      - "./renovate.json"

permissions:
  contents: read

jobs:
  build:
    name: "Test .deb packages"
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: 1.21.9

      - name: Cache virtualenvs
        id: cache-pipenv
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install functional test dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential debhelper devscripts fakeroot lintian
          docker network create net-test
          python3 -m pip install --upgrade pipenv wheel
          pipenv install --deploy
          sudo python3 -m pip install --upgrade pipenv wheel
          sudo pipenv install --deploy

      - name: Run functional tests
        env:
          CROWDSEC_TEST_VERSION: dev
          CROWDSEC_TEST_FLAVORS: full
          CROWDSEC_TEST_NETWORK: net-test
          CROWDSEC_TEST_TIMEOUT: 60
          PYTEST_ADDOPTS: --durations=0 -vv --color=yes
        run: |
          sudo apt install -y nftables iptables ipset
          pipenv run pytest test/pkg/test_build_deb.py
          sudo -E pipenv run pytest -m deb ./test/install/no_crowdsec

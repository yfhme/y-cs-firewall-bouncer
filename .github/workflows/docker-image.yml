name: docker build and push

on:
  merge_group:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    paths-ignore:
      - "**/renovate.json"
    branches:
      - "main"
      - "dev"
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * 2"

env:
  REGISTRY_IMAGE: yfhme/cs-firewall-bouncer-docker
  TEST_TAG: yfhme/cs-firewall-bouncer-docker:test
  PROGRAM_NAME: crowdsec-firewall-bouncer

jobs:
  build:
    name: Build and all platforms
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Check Dir
        run: |
          ls -al

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: 1.21.7

      - name: Build all platforms
        run: |
          # build platform-all first so the .xz vendor file is not removed
          make platform-all vendor

      - name: Check Dir
        run: |
          ls -al

      - name: Upload Binary to Artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: bin-files
          path: crowdsec-*
          overwrite: true

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4
        with:
          name: bin-files

      - name: Check Dir
        run: |
          ls -al

      #- name: Get Build Version
      #  run: |
      #    BUILD_VERSION=$(git describe --tags)

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=schedule,pattern=weekly
            type=edge,branch=dev
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker for test
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          load: true
          #build-args: BUILD_VERSION=$BUILD_VERSION
          tags: ${{ env.TEST_TAG }}

      - name: Test container
        run: |
          docker run --rm --entrypoint crowdsec-firewall-bouncer ${{ env.TEST_TAG }} -version

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        id: build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
